using System;
using System.Collections.Generic;
using System.Linq;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;
using System.Windows.Threading;

namespace MBTI
{
    public class MyQuestions
    {
        // [* № вопроса,[E баллы за ответы[превый, второй, иногда третий],I баллы за ответы]*]
        private readonly Dictionary<int, int[,]> EI = new Dictionary<int, int[,]> { { 1, new int[,]  { { 2, 0 }, { 0, 2 } } },
                                                                                    { 5, new int[,]  { { 1, 0 }, { 0, 2 } } },
                                                                                    { 9, new int[,]  { { 2, 0 }, { 0, 2 } } },
                                                                                    { 13, new int[,] { { 0, 2 }, { 1, 0 } } },
                                                                                    { 17, new int[,] { { 0, 2 }, { 1, 0 } } },
                                                                                    { 21, new int[,] { { 2, 0 }, { 0, 2 } } },
                                                                                    { 25, new int[,] { { 1, 0 }, { 0, 1 } } },
                                                                                    { 29, new int[,] { { 1, 0 }, { 0, 0 } } },
                                                                                    { 33, new int[,] { { 1, 0 }, { 0, 1 } } },
                                                                                    { 37, new int[,] { { 0, 2 }, { 1, 0 } } },
                                                                                    { 41, new int[,] { { 0, 0 }, { 0, 2 } } },
                                                                                    { 45, new int[,] { { 1, 0 }, { 0, 2 } } },
                                                                                    { 49, new int[,] { { 0, 1, 0 }, { 0, 0, 2 } } },
                                                                                    { 53, new int[,] { { 1, 0 }, { 0, 1 } } },
                                                                                    { 57, new int[,] { { 1, 0 }, { 0, 2 } } },
                                                                                    { 61, new int[,] { { 1, 0 }, { 0, 2 } } },
                                                                                    { 65, new int[,] { { 0, 2 }, { 1, 0 } } },
                                                                                    { 69, new int[,] { { 0, 1 }, { 1, 0 } } },
                                                                                    { 73, new int[,] { { 0, 0 }, { 0, 1 } } },
                                                                                    { 77, new int[,] { { 1, 0 }, { 1, 0 } } },
                                                                                    { 81, new int[,] { { 1, 0 }, { 0, 0 } } } };
        // [* № вопроса,[S баллы за ответы[превый, второй, иногда третий],N баллы за ответы]*]
        private readonly Dictionary<int, int[,]> SN = new Dictionary<int, int[,]> { { 2, new int[,]  { { 2, 0 }, { 0, 2 } } },
                                                                                    { 6, new int[,]  { { 0, 1 }, { 2, 0 } } },
                                                                                    { 10, new int[,] { { 2, 0 }, { 0, 2 } } },
                                                                                    { 14, new int[,] { { 1, 0 }, { 0, 2 } } },
                                                                                    { 18, new int[,] { { 0, 2 }, { 1, 0 } } },
                                                                                    { 22, new int[,] { { 0, 1 }, { 0, 0 } } },
                                                                                    { 26, new int[,] { { 1, 0 }, { 0, 1 } } },
                                                                                    { 30, new int[,] { { 1, 0 }, { 0, 0 } } },
                                                                                    { 34, new int[,] { { 0, 1 }, { 2, 0 } } },
                                                                                    { 38, new int[,] { { 0, 1 }, { 0, 0 } } },
                                                                                    { 42, new int[,] { { 2, 0 }, { 0, 0 } } },
                                                                                    { 46, new int[,] { { 2, 0 }, { 0, 1 } } },
                                                                                    { 50, new int[,] { { 2, 0 }, { 0, 1 } } },
                                                                                    { 54, new int[,] { { 0, 1 }, { 2, 0 } } },
                                                                                    { 58, new int[,] { { 1, 0 }, { 0, 1 } } },
                                                                                    { 62, new int[,] { { 0, 2 }, { 0, 0 } } },
                                                                                    { 66, new int[,] { { 2, 0 }, { 0, 0 } } },
                                                                                    { 70, new int[,] { { 2, 0 }, { 0, 0 } } },
                                                                                    { 74, new int[,] { { 1, 0 }, { 0, 1 } } },
                                                                                    { 78, new int[,] { { 1, 0 }, { 0, 2 } } },
                                                                                    { 82, new int[,] { { 2, 0 }, { 0, 1 } } },
                                                                                    { 85, new int[,] { { 0, 0 }, { 2, 0 } } },
                                                                                    { 88, new int[,] { { 0, 0 }, { 2, 0 } } },
                                                                                    { 91, new int[,] { { 1, 0 }, { 0, 0 } } },
                                                                                    { 93, new int[,] { { 1, 0 }, { 0, 0 } } },
                                                                                    { 94, new int[,] { { 1, 0 }, { 0, 1 } } } };
        // [* № вопроса,[T баллы за ответы[превый, второй, иногда третий],F баллы за ответы]*]
        private readonly Dictionary<int, int[,]> TF = new Dictionary<int, int[,]> { { 3, new int[,]  { { 0, 1 }, { 2, 0 } } },
                                                                                    { 7, new int[,]  { { 0, 2 }, { 1, 0 } } },
                                                                                    { 11, new int[,] { { 0, 2 }, { 2, 0 } } },
                                                                                    { 15, new int[,] { { 0, 0 }, { 2, 0 } } },
                                                                                    { 19, new int[,] { { 0, 0 }, { 2, 0 } } },
                                                                                    { 23, new int[,] { { 1, 0 }, { 0, 0 } } },
                                                                                    { 27, new int[,] { { 0, 2 }, { 0, 0 } } },
                                                                                    { 31, new int[,] { { 0, 2 }, { 1, 0 } } },
                                                                                    { 35, new int[,] { { 2, 0 }, { 0, 1 } } },
                                                                                    { 39, new int[,] { { 2, 0 }, { 0, 1 } } },
                                                                                    { 43, new int[,] { { 1, 0 }, { 0, 2 } } },
                                                                                    { 47, new int[,] { { 1, 0 }, { 0, 2 } } },
                                                                                    { 51, new int[,] { { 0, 2 }, { 1, 0 } } },
                                                                                    { 55, new int[,] { { 1, 0 }, { 0, 1 } } },
                                                                                    { 59, new int[,] { { 1, 0 }, { 0, 2 } } },
                                                                                    { 63, new int[,] { { 2, 0 }, { 0, 0 } } },
                                                                                    { 67, new int[,] { { 0, 2 }, { 0, 0 } } },
                                                                                    { 71, new int[,] { { 0, 2 }, { 0, 0 } } },
                                                                                    { 75, new int[,] { { 0, 2 }, { 0, 0 } } },
                                                                                    { 79, new int[,] { { 0, 1 }, { 0, 0 } } },
                                                                                    { 83, new int[,] { { 0, 1 }, { 1, 0 } } },
                                                                                    { 86, new int[,] { { 2, 0 }, { 0, 0 } } },
                                                                                    { 89, new int[,] { { 0, 0 }, { 1, 0 } } } };
        // [* № вопроса,[J баллы за ответы[превый, второй, иногда третий],P баллы за ответы]*]
        private readonly Dictionary<int, int[,]> JP = new Dictionary<int, int[,]> { { 4, new int[,]  { { 2, 0 }, { 0, 2 } } },
                                                                                    { 8, new int[,]  { { 2, 0 }, { 0, 1 } } },
                                                                                    { 12, new int[,] { { 0, 1 }, { 1, 0 } } },
                                                                                    { 16, new int[,] { { 2, 0 }, { 0, 2 } } },
                                                                                    { 20, new int[,] { { 1, 0, 0 }, { 0, 1, 1 } } },
                                                                                    { 24, new int[,] { { 0, 0, 1 }, { 1, 0, 0 } } },
                                                                                    { 28, new int[,] { { 1, 0 }, { 0, 2 } } },
                                                                                    { 32, new int[,] { { 1, 0 }, { 0, 1 } } },
                                                                                    { 36, new int[,] { { 0, 1 }, { 1, 0 } } },
                                                                                    { 40, new int[,] { { 0, 0 }, { 1, 2 } } },
                                                                                    { 44, new int[,] { { 0, 1, 0 }, { 1, 0, 0 } } },
                                                                                    { 48, new int[,] { { 0, 1 }, { 1, 0 } } },
                                                                                    { 52, new int[,] { { 2, 0 }, { 0, 1 } } },
                                                                                    { 56, new int[,] { { 0, 0 }, { 1, 0 } } },
                                                                                    { 60, new int[,] { { 0, 0, 0 }, { 0, 1, 1 } } },
                                                                                    { 64, new int[,] { { 1, 0 }, { 0, 0 } } },
                                                                                    { 68, new int[,] { { 2, 0 }, { 0, 2 } } },
                                                                                    { 72, new int[,] { { 2, 0 }, { 0, 2 } } },
                                                                                    { 76, new int[,] { { 2, 0 }, { 0, 2 } } },
                                                                                    { 80, new int[,] { { 0, 1 }, { 2, 0 } } },
                                                                                    { 84, new int[,] { { 1, 0 }, { 0, 1 } } },
                                                                                    { 87, new int[,] { { 0, 1 }, { 0, 0 } } },
                                                                                    { 90, new int[,] { { 2, 0 }, { 0, 1 } } },
                                                                                    { 92, new int[,] { { 0, 0 }, { 1, 0 } } } };
        public const int LastPosition = 94;

        public Dictionary<string, int> Answers = new Dictionary<string, int> { { "E", 0 }, { "I", 0 }, { "S", 0 }, { "N", 0 }, { "T", 0 }, { "F", 0 }, { "J", 0 }, { "P", 0 } };
        public Dictionary<int, bool?> PreAnswers = new Dictionary<int, bool?>();

        private int position = 1;

        public int Position
        {
            get
            {
                return position;
            }
            set
            {
                if (value <= LastPosition && value > 0)
                {
                    position = value;
                }
                else
                    MessageBox.Show("Выход за пределы массива", "ERROR", MessageBoxButton.OK, MessageBoxImage.Error);
            }

        }

        private string[,] positions = new string[LastPosition, 4] {/*1*/ {"Обычно Вы:","общительны","довольно сдержанны и спокойны",null},
                                                         /*2*/ {"Если бы Вы были преподавателем, какой курс Вы бы предпочли:","построенный на изложении фактов","включающий в себя изложение теорий",null},
                                                         /*3*/ {"Вы чаще позволяете:","своему сердцу управлять разумом","своему разуму управлять сердцем",null},
                                                         /*4*/ {"Когда Вы отправляетесь куда-то на весь день, Вы:","планируете, что и когда будете делать","уходите без определенного плана",null},
                                                         /*5*/ {"Находясь в компании, Вы обычно:","присоединяетесь к общему разговору","беседуете время от времени с кем-то одним",null},
                                                         /*6*/ {"Вам легче поладить с людьми:","имеющими богатое воображение","реалистичными",null},
                                                         /*7*/ {"Более высокой похвалой Вы считаете слова:","душевный человек","последовательно рассуждающий человек",null},
                                                         /*8*/ {"Вы предпочитаете:","заранее договариваться о встречах, вечеринках и т.п.","иметь возможность в последний момент решать, как развлечься",null},
                                                         /*9*/ {"В большой компании чаще:","Вы представляете людей друг другу","Вас знакомят с другими",null},
                                                        /*10*/ {"Вас скорее можно назвать:","человеком практичным","выдумщиком",null},
                                                        /*11*/ {"Обычно Вы:","цените чувства больше, чем логику","цените логику больше, чем чувства",null},
                                                        /*12*/ {"Вы чаще добиваетесь успеха:","действуя в непредсказуемой ситуации, когда нужно быстро принимать решения","следуя тщательно разработанному плану",null},
                                                        /*13*/ {"Вы предпочитаете:","иметь несколько близких, верных друзей","иметь дружеские связи с самыми разными людьми",null},
                                                        /*14*/ {"Вам больше нравятся люди, которые:","следуют общепринятым нормам и не привлекают к себе внимания","настолько оригинальны, что им все равно, обращают на них внимание или нет",null},
                                                        /*15*/ {"На Ваш взгляд самый большой недостаток –быть:","бесчувственным","неблагоразумным",null},
                                                        /*16*/ {"Следование какому-либо расписанию:","привлекает Вас","сковывает Вас",null},
                                                        /*17*/ {"Среди своих друзей Вы:","позже других узнаете о событиях в их жизни","обычно знаете массу новостей о них",null},
                                                        /*18*/ {"Вы бы предпочли иметь среди своих друзей человека, который:","всегда полон новых идей","трезво и реалистично смотрит на мир",null},
                                                        /*19*/ {"Вы предпочли бы работать под началом человека, который:","всегда добр","всегда справедлив",null},
                                                        /*20*/ {"Мысль о том, чтобы составить список дел на выходные:","Вас привлекает","оставляет Вас равнодушным","угнетает Вас"},
                                                        /*21*/ {"Вы обычно:","можете легко разговаривать практически с любым человеком в течение любого времени","можете найти тему для разговора только с немногими людьми и только в определенных ситуациях",null},
                                                        /*22*/ {"Когда Вы читаете для своего удовольствия, Вам нравится:","необычная, оригинальная манера изложения","когда писатели четко выражают свои мысли",null},
                                                        /*23*/ {"Вы считаете, что более серьезный недостаток:","быть слишком сердечным","быть недостаточно сердечным",null},
                                                        /*24*/ {"В своей повседневной работе:","Вам больше нравятся критические ситуации, когда Вам приходится работать в условиях дефицита времени","ненавидите работать в жестких временных рамках","обычно планируете свою работу так, чтобы Вам хватило времени"},
                                                        /*25*/ {"Люди могут определить область Ваших интересов:","при первом знакомстве с Вами","лишь тогда, когда узнают Вас поближе",null},
                                                        /*26*/ {"Выполняя ту же работу, что и многие другие люди, Вы предпочитаете:","делать это традиционным способом","изобретать свой собственный способ",null},
                                                        /*27*/ {"Вас больше волнуют:","чувства людей","их права",null},
                                                        /*28*/ {"Когда Вам нужно выполнить определенную работу, Вы обычно:","тщательно организовываете все перед началом работы","предпочитаете выяснять все необходимое в процессе работы",null},
                                                        /*29*/ {"Обычно Вы:","свободно выражаете свои чувства","держите свои чувства при себе",null},
                                                        /*30*/ {"Вы предпочитаете:","быть оригинальным","следовать общепринятым нормам",null},
                                                        /*31*/ {"Какое слово вам больше нравится:","кроткий","настойчивый",null},
                                                        /*32*/ {"Когда Вам необходимо что-то сделать в определенное время, Вы считаете, что:","лучше планировать все заранее","несколько неприятно быть связанным этими планами",null},
                                                        /*33*/ {"Можно сказать, что Вы:","более восторженны по сравнению с другими людьми","менее восторженны, чем большинство людей",null},
                                                        /*34*/ {"Более высокой похвалой человеку будет признание:","его способности к предвидению","его здравого смысла",null},
                                                        /*35*/ {"Какое слово вам больше нравится:","мысли","чувства",null},
                                                        /*36*/ {"Обычно:","Вы предпочитаете все делать в последнюю минуту","для Вас откладывать все до последней минуты –это слишком большая нервотрепка",null},
                                                        /*37*/ {"На вечеринках Вам:","иногда становится скучно","всегда весело",null},
                                                        /*38*/ {"Вы считаете, что более важно:","видеть различные возможности в какой-либо ситуации","воспринимать факты такими, какие они есть",null},
                                                        /*39*/ {"Какое слово вам больше нравится:","убедительный","трогательный",null},
                                                        /*40*/ {"Считаете ли Вы, что наличие стабильного повседневного распорядка:","очень удобно для выполнения многих дел","тягостно, даже когда это необходимо",null},
                                                        /*41*/ {"Когда что-то входит в моду, Вы обычно:","одним из первых испробуете это","мало этим интересуетесь",null},
                                                        /*42*/ {"Вы скорее:","придерживаетесь общепринятых методов в работе","ищете, что еще неверно, и беретесь за неразрешенные проблемы",null},
                                                        /*43*/ {"Какое слово вам больше нравится:","анализировать","сопереживать",null},
                                                        /*44*/ {"Когда Вы думаете о том, что надо сделать какое-то не очень важное дело или купить какую-то мелкую вещь, Вы:","часто забываете об этом и вспоминаете слишком поздно","записываете это на бумаге, чтобы не забыть","всегда выполняете это без дополнительных напоминаний"},
                                                        /*45*/ {"Узнать, что Вы за человек:","довольно легко","довольно трудно",null},
                                                        /*46*/ {"Какое слово вам больше нравится:","факты","идеи",null},
                                                        /*47*/ {"Какое слово вам больше нравится:","справедливость","сочувствие",null},
                                                        /*48*/ {"Вам труднее приспособиться:","к однообразию","к постоянным переменам",null},
                                                        /*49*/ {"Оказавшись в затруднительной ситуации, Вы обычно:","переводите разговор на другое","обращаете все в шутку","спустя несколько дней думаете, что Вам следовало сказать"},
                                                        /*50*/ {"Какое слово вам больше нравится:","утверждение","идея",null},
                                                        /*51*/ {"Какое слово вам больше нравится:","сочувствие","расчетливость",null},
                                                        /*52*/ {"Когда Вы начинаете какое-то большое дело, которое займет у Вас неделю, Вы:","составляете сначала список того, что нужно сделать и в каком порядке","сразу беретесь за работу",null},
                                                        /*53*/ {"Вы считаете, что Вашим близким известны Ваши мысли:","достаточно хорошо","лишь тогда, когда Вы намеренно сообщаете о них",null},
                                                        /*54*/ {"Какое слово вам больше нравится:","теория","факт",null},
                                                        /*55*/ {"Какое слово вам больше нравится:","выгода","благодеяние",null},
                                                        /*56*/ {"Выполняя какую-либо работу, Вы обычно:","планируете работу таким образом, чтобы закончить с запасом времени","в последний момент работаете с наивысшей производительностью",null},
                                                        /*57*/ {"Будучи на вечеринке, Вы предпочитаете:","активно участвовать в развитии событий","предоставляете другим развлекаться, как им хочется",null},
                                                        /*58*/ {"Какое слово вам больше нравится:","буквальный","фигуральный",null},
                                                        /*59*/ {"Какое слово вам больше нравится:","решительный","преданный",null},
                                                        /*60*/ {"Если в выходной утром Вас спросят, что Вы собираетесь сделать в течение дня, Вы:","сможете довольно точно ответить","перечислите вдвое больше дел, чем сможете сделать","предпочтете не загадывать заранее"},
                                                        /*61*/ {"Какое слово вам больше нравится:","энергичный","спокойный",null},
                                                        /*62*/ {"Какое слово вам больше нравится:","образный","прозаичный",null},
                                                        /*63*/ {"Какое слово вам больше нравится:","неуступчивый","добросердечный",null},
                                                        /*64*/ {"Однообразие повседневных дел кажется Вам:","спокойным","утомительным",null},
                                                        /*65*/ {"Какое слово вам больше нравится:","сдержанный","разговорчивый",null},
                                                        /*66*/ {"Какое слово вам больше нравится:","производить","создавать",null},
                                                        /*67*/ {"Какое слово вам больше нравится:","миротворец","судья",null},
                                                        /*68*/ {"Какое слово вам больше нравится:","запланированный","внеплановый",null},
                                                        /*69*/ {"Какое слово вам больше нравится:","спокойный","оживленный",null},
                                                        /*70*/ {"Какое слово вам больше нравится:","благоразумный","очаровательный",null},
                                                        /*71*/ {"Какое слово вам больше нравится:","мягкий","твердый",null},
                                                        /*72*/ {"Какое слово вам больше нравится:","методичный","спонтанный",null},
                                                        /*73*/ {"Какое слово вам больше нравится:","говорить","писать",null},
                                                        /*74*/ {"Какое слово вам больше нравится:","производство","планирование",null},
                                                        /*75*/ {"Какое слово вам больше нравится:","прощать","дозволять",null},
                                                        /*76*/ {"Какое слово вам больше нравится:","систематический","случайный",null},
                                                        /*77*/ {"Какое слово вам больше нравится:","общительный","замкнутый",null},
                                                        /*78*/ {"Какое слово вам больше нравится:","конкретный","абстрактный",null},
                                                        /*79*/ {"Какое слово вам больше нравится:","кто","что",null},
                                                        /*80*/ {"Какое слово вам больше нравится:","импульс","решение",null},
                                                        /*81*/ {"Какое слово вам больше нравится:","вечеринка","театр",null},
                                                        /*82*/ {"Какое слово вам больше нравится:","сооружать","изобретать",null},
                                                        /*83*/ {"Какое слово вам больше нравится:","некритичный","критичный",null},
                                                        /*84*/ {"Какое слово вам больше нравится:","пунктуальный","свободный",null},
                                                        /*85*/ {"Какое слово вам больше нравится:","основание","вершина",null},
                                                        /*86*/ {"Какое слово вам больше нравится:","осторожный","доверчивый",null},
                                                        /*87*/ {"Какое слово вам больше нравится:","переменчивый","неизменный",null},
                                                        /*88*/ {"Какое слово вам больше нравится:","теория","практика",null},
                                                        /*89*/ {"Какое слово вам больше нравится:","соглашаться","дискутировать",null},
                                                        /*90*/ {"Какое слово вам больше нравится:","дисциплинированный","беспечный",null},
                                                        /*91*/ {"Какое слово вам больше нравится:","знак","символ",null},
                                                        /*92*/ {"Какое слово вам больше нравится:","стремительный","тщательный",null},
                                                        /*93*/ {"Какое слово вам больше нравится:","принимать","изменять",null},
                                                        /*94*/ {"Какое слово вам больше нравится:","известный","неизвестный",null}, };

        public void setPositions(TextBlock Вопрос, RadioButton Вариант1, RadioButton Вариант2, RadioButton Вариант3)
        {
            Вопрос.Text = positions[Position - 1, 0];
            TextBlock textBlock = new TextBlock();
            textBlock.TextWrapping = TextWrapping.Wrap;
            textBlock.Text = positions[Position - 1, 1];
            Вариант1.Content = textBlock;
            textBlock = new TextBlock();
            textBlock.TextWrapping = TextWrapping.Wrap;
            textBlock.Text = positions[Position - 1, 2];
            Вариант2.Content = textBlock;
            if (positions[Position - 1, 3] != null)
            {
                Вариант3.IsEnabled = true;
                Вариант3.Visibility = Visibility.Visible;
                textBlock = new TextBlock();
                textBlock.TextWrapping = TextWrapping.Wrap;
                textBlock.Text = positions[Position - 1, 3];
                Вариант3.Content = textBlock;
            }
            else
            {
                Вариант3.IsEnabled = false;
                Вариант3.Visibility = Visibility.Hidden;
            }
        }

        public void SetPreAnswer(bool? variant)
        {
            if (PreAnswers.Keys.Contains(position))
            {
                PreAnswers[position] = variant;
            }
            else
            {
                PreAnswers.Add(position, variant);
            }
        }

        public void SetAnswer()
        {
            foreach (var variant in PreAnswers)
            {
                if (EI.Keys.Contains(variant.Key))
                {
                    if (variant.Value == true)
                    {
                        Answers["E"] += EI[variant.Key][0, 0];
                        Answers["I"] += EI[variant.Key][1, 0];
                    }
                    else if (variant.Value == false)
                    {
                        Answers["E"] += EI[variant.Key][0, 1];
                        Answers["I"] += EI[variant.Key][1, 1];
                    }
                    else
                    {
                        Answers["E"] += EI[variant.Key][0, 2];
                        Answers["I"] += EI[variant.Key][1, 2];
                    }
                }
                else if (SN.Keys.Contains(variant.Key))
                {
                    if (variant.Value == true)
                    {
                        Answers["S"] += SN[variant.Key][0, 0];
                        Answers["N"] += SN[variant.Key][1, 0];
                    }
                    else if (variant.Value == false)
                    {
                        Answers["S"] += SN[variant.Key][0, 1];
                        Answers["N"] += SN[variant.Key][1, 1];
                    }
                    else
                    {
                        Answers["S"] += SN[variant.Key][0, 2];
                        Answers["N"] += SN[variant.Key][1, 2];
                    }
                }
                else if (TF.Keys.Contains(variant.Key))
                {
                    if (variant.Value == true)
                    {
                        Answers["T"] += TF[variant.Key][0, 0];
                        Answers["F"] += TF[variant.Key][1, 0];
                    }
                    else if (variant.Value == false)
                    {
                        Answers["T"] += TF[variant.Key][0, 1];
                        Answers["F"] += TF[variant.Key][1, 1];
                    }
                    else
                    {
                        Answers["T"] += TF[variant.Key][0, 2];
                        Answers["F"] += TF[variant.Key][1, 2];
                    }
                }
                else if (JP.Keys.Contains(variant.Key))
                {
                    if (variant.Value == true)
                    {
                        Answers["J"] += JP[variant.Key][0, 0];
                        Answers["P"] += JP[variant.Key][1, 0];
                    }
                    else if (variant.Value == false)
                    {
                        Answers["J"] += JP[variant.Key][0, 1];
                        Answers["P"] += JP[variant.Key][1, 1];
                    }
                    else
                    {
                        Answers["J"] += JP[variant.Key][0, 2];
                        Answers["P"] += JP[variant.Key][1, 2];
                    }
                }
            }
        }

    }

    public partial class MainWindow : Window
    {
        private MyQuestions myQuestions = new MyQuestions();
        private Person person;
        private int minuts = 40;
        private int second = 0;

        public MainWindow(Person person)
        {
            InitializeComponent();
            this.person = person;
            LTime.Content = $"{minuts}:00";
            DispatcherTimer timer = new DispatcherTimer();
            timer.Interval = TimeSpan.FromSeconds(1);
            timer.Tick += Timer_Tick;
            timer.Start();
        }

        private void Timer_Tick(object sender, EventArgs e)
        {
            if (second == 0)
            {
                second = 60;
                minuts--;
                if (minuts == -1)
                {
                    // завершение теста по окончанию времени

                    myQuestions.SetAnswer();
                    person.Answers = myQuestions.Answers;
                    new ResultWindow(person).Show();
                    Close();
                }
            }
            second--;
            if (minuts < 10)
            {
                if (second < 10)
                {
                    LTime.Content = $"0{minuts}:0{second}";
                }
                else
                {
                    LTime.Content = $"0{minuts}:{second}";
                }
            }
            else
            {
                if (second < 10)
                {
                    LTime.Content = $"{minuts}:0{second}";
                }
                else
                {
                    LTime.Content = $"{minuts}:{second}";
                }
            }
        }

        private void Window_Loaded(object sender, RoutedEventArgs e)
        {
            BTPrevious.IsEnabled = false;
            SetPositions();
        }

        private void BTNext_Click(object sender, RoutedEventArgs e)
        {
            if (myQuestions.Position != MyQuestions.LastPosition)
            {
                if (myQuestions.Position == 1)
                {
                    BTPrevious.IsEnabled = true;
                }
                else if (myQuestions.Position == MyQuestions.LastPosition - 1)
                {
                    BTNext.Content = "Завершить";
                }
                myQuestions.Position++;
                SetPositions();
            }
            else
            {
                //завершение теста по нажатию

                myQuestions.SetAnswer();
                person.Answers = myQuestions.Answers;
                new ResultWindow(person).Show();
                Close();
            }
        }

        private void BTPrevious_Click(object sender, RoutedEventArgs e)
        {
            myQuestions.Position--;
            SetPositions();
            if (myQuestions.Position == 1)
            {
                BTPrevious.IsEnabled = false;
            }
            else if (myQuestions.Position == MyQuestions.LastPosition - 1)
            {
                BTNext.Content = "Следующий";
            }
        }

        public void SetPositions()
        {
            myQuestions.setPositions(Вопрос, Вариант1, Вариант2, Вариант3);
            НомерВопроса.Content = "№" + myQuestions.Position;
            if (myQuestions.PreAnswers.Keys.Contains(myQuestions.Position))
            {
                switch (myQuestions.PreAnswers[myQuestions.Position])
                {
                    case true:
                        {
                            Вариант1.IsChecked = true;
                            break;
                        }
                    case false:
                        {
                            Вариант2.IsChecked = true;
                            break;
                        }
                    case null:
                        {
                            Вариант3.IsChecked = true;
                            break;
                        }
                }
            }
            else
            {
                Вариант1.IsChecked = false;
                Вариант2.IsChecked = false;
                Вариант3.IsChecked = false;
            }
        }

        private void Вариант1_Checked(object sender, RoutedEventArgs e)
        {
            myQuestions.SetPreAnswer(true);
        }

        private void Вариант2_Checked(object sender, RoutedEventArgs e)
        {
            myQuestions.SetPreAnswer(false);
        }

        private void Вариант3_Checked(object sender, RoutedEventArgs e)
        {
            myQuestions.SetPreAnswer(null);
        }

        private void BTEnd_Click(object sender, RoutedEventArgs e)
        {
            myQuestions.SetAnswer();
            person.Answers = myQuestions.Answers;
            new ResultWindow(person).Show();
            Close();
        }

        private void Window_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.Key == Key.D1)
            {
                Вариант1.IsChecked = true;
            }
            if (e.Key == Key.D2)
            {
                Вариант2.IsChecked = true;
            }
            if (e.Key == Key.D1 && Вариант3.IsEnabled)
            {
                Вариант3.IsChecked = true;
            }
        }
    }
}
